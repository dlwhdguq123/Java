/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.14
 * Generated at: 2019-01-15 03:23:38 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.WEB_002dINF.view.home;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class login_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  static {
    _jspx_dependants = new java.util.HashMap<java.lang.String,java.lang.Long>(2);
    _jspx_dependants.put("/WEB-INF/lib/standard.jar", Long.valueOf(1547435723498L));
    _jspx_dependants.put("jar:file:/C:/Users/hanbit/java_basic/jee_workspace/.metadata/.plugins/org.eclipse.wst.server.core/tmp0/wtpwebapps/BitShop_v2/WEB-INF/lib/standard.jar!/META-INF/c.tld", Long.valueOf(1098678690000L));
  }

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET, POST or HEAD. Jasper also permits OPTIONS");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<meta charset=\"UTF-8\">\r\n");
      out.write("<title>그룹웨어</title>\r\n");
      out.write("<link rel=\"stylesheet\" href=\"resources/css/style.css\" />\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("<div style=\"width:100% \">\r\n");
      out.write("<section>\r\n");
      out.write("<article>\r\n");
      out.write("\t<h1 id=\"title\">회원 전용 시스템</h1>\r\n");
      out.write("\t<table id=\"login-outer-tab\">\r\n");
      out.write("\t\t<tr>\r\n");
      out.write("\t\t\t<td colspan=\"5\">\r\n");
      out.write("\t\t\t\t<form id=\"login-form\">\r\n");
      out.write("\t\t\t\t\t<table id=\"login-inner-tab\">\r\n");
      out.write("\t\t\t\t\t\t<tr>\r\n");
      out.write("\t\t\t\t\t\t\t<td><input id=\"uid\" name=\"uid\"\r\n");
      out.write("\t\t\t\t\t\t\t\ttype=\"text\"  placeholder=\"ID\" tabindex=\"1\" />\r\n");
      out.write("\t\t\t\t\t\t\t</td>\r\n");
      out.write("\t\t\t\t\t\t\t<td rowspan=\"2\">\r\n");
      out.write("\t\t\t\t\t\t\t\t<button id=\"login-btn\">LOGIN</button>\r\n");
      out.write("\t\t\t\t\t\t\t</td>\r\n");
      out.write("\t\t\t\t\t\t</tr>\r\n");
      out.write("\t\t\t\t\t\t<tr>\r\n");
      out.write("\t\t\t\t\t\t\t<td><input id=\"upw\" name=\"upw\"\r\n");
      out.write("\t\t\t\t\t\t\t\t\ttype=\"password\"  placeholder=\"PASSWORD\"\r\n");
      out.write("\t\t\t\t\t\t\t\t\ttabindex=\"2\" /> \r\n");
      out.write("\t\t\t\t\t\t\t\t<input type=\"hidden\" name=\"cmd\" value=\"login\" /> \r\n");
      out.write("\t\t\t\t\t\t\t\t<input type=\"hidden\" name=\"dir\" value=\"home\" /> \r\n");
      out.write("\t\t\t\t\t\t\t\t<input type=\"hidden\" name=\"dest\" value=\"welcome\" /> \r\n");
      out.write("\t\t\t\t\t\t\t</td>\r\n");
      out.write("\t\t\t\t\t\t</tr>\r\n");
      out.write("\t\t\t\t\t</table>\r\n");
      out.write("\t\t\t\t</form> \r\n");
      out.write("\t\t\t\t<a id=\"admin-link\" href=\"#\"> 관리자 </a>\r\n");
      out.write("\t\t\t\t\t\t<a id=\"join-link\" href=\"#\"> 회원가입 </a>\r\n");
      out.write("\t\t\t</td>\r\n");
      out.write("\t\t</tr>\r\n");
      out.write("\t</table>\r\n");
      out.write("</article>\r\n");
      out.write("</section>\r\n");
      out.write("\r\n");
      out.write("</div>\r\n");
      out.write("<script>\t\r\n");
      out.write("\tvar submit = document.getElementById(\"login-btn\");\r\n");
      out.write("\tsubmit.addEventListener('click',function(){\r\n");
      out.write("\r\n");
      out.write("\t\t\tvar uid = document.getElementById(\"uid\");\r\n");
      out.write("\t\t\tvar upw = document.getElementById(\"upw\");\r\n");
      out.write("\t\t\r\n");
      out.write("\t\t\tif(uid.value===\"\" && upw.value===\"\"){\r\n");
      out.write("\t\t\t\talert('아이디 입력값이 없어요 !!');\r\n");
      out.write("\t\t\t}else{\r\n");
      out.write("\t\t\t\talert('아이디 입력값이 있어요 !!');\r\n");
      out.write("\t\t\t\tvar form = document.getElementById(\"uid\");\r\n");
      out.write("\t\t\t\tform.action = \"member.do\";\r\n");
      out.write("\t\t\t\tform.method = \"post\";\r\n");
      out.write("\t\t\t\tform.submit();\r\n");
      out.write("\t\t\t\t\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\t}); \r\n");
      out.write("\tdocument.getElementById('join-link').addEventListener('click',function(){\r\n");
      out.write("\t\t\tlocation.assign('member.do?dest=join-form');\r\n");
      out.write("\t});  \r\n");
      out.write("\t\r\n");
      out.write("\t// move 이면 클릭이벤트가 리스닝\r\n");
      out.write("\t// move() 이면 즉시실행됨\r\n");
      out.write("\t// 'click',function(){} 하면 콜백함수가 호출된다 */\r\n");
      out.write("</script>\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
